{"version":3,"file":"bundle.js","sources":["../node_modules/tslib/tslib.es6.js","../src/request.ts","../src/WebAPIClient.tsx","../src/WebConfig.tsx","../src/GlobalGeoConfig/GlobalGeoConfig.ts","../src/queries.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst codeMessage = {\r\n  200: \"服务器成功返回请求的数据。\",\r\n  201: \"新建或修改数据成功。\",\r\n  202: \"一个请求已经进入后台排队（异步任务）。\",\r\n  204: \"删除数据成功。\",\r\n  400: \"发出的请求有错误，服务器没有进行新建或修改数据的操作。\",\r\n  401: \"用户没有权限（令牌、用户名、密码错误）。\",\r\n  403: \"用户得到授权，但是访问是被禁止的。\",\r\n  404: \"发出的请求针对的是不存在的记录，服务器没有进行操作。\",\r\n  406: \"请求的格式不可得。\",\r\n  410: \"请求的资源被永久删除，且不会再得到的。\",\r\n  422: \"当创建一个对象时，发生一个验证错误。\",\r\n  500: \"服务器发生错误，请检查服务器。\",\r\n  502: \"网关错误。\",\r\n  503: \"服务不可用，服务器暂时过载或维护。\",\r\n  504: \"网关超时。\"\r\n};\r\n\r\n// axios.defaults.timeout = 5000;\r\naxios.defaults.baseURL = \"../\";\r\naxios.defaults.headers = {\r\n  Accept: 'application/json',\r\n  'Content-Type': 'application/json',\r\n  cache: false,\r\n};\r\n\r\ninterface CustomError {\r\n  url?: string\r\n  method?: string\r\n  status?: string\r\n}\r\n\r\nclass CustomError extends Error {\r\n  constructor(msg, url: string, method: string, status: string) {\r\n    super(msg)\r\n    this.url = url\r\n    this.method = method\r\n    this.status = status\r\n    Object.setPrototypeOf(this, CustomError.prototype)\r\n  }\r\n}\r\n\r\n/**\r\n * 封装axios调用\r\n * @param opts\r\n */\r\nconst request = opts => {\r\n  return axios(opts)\r\n    //@ts-ignore\r\n    .then(res => {\r\n      if (res.status >= 200 && res.status < 300) {\r\n        return res;\r\n      }\r\n    })\r\n    .catch(err => {\r\n      const res = err.response;\r\n      if (!res) {\r\n        const message = err.message;\r\n        console.log(\r\n          `%c *${opts.method.toUpperCase()} ${opts.url}* 请求未正确发送, 错误如下: `,\r\n          \"background: #222; color: #fff; font-weight: bold;\"\r\n        );\r\n        console.log(message);\r\n        throw new CustomError(message, opts.url, opts.method, opts.status);\r\n      } else {\r\n        const message = codeMessage[res.status] || res.statusText;\r\n        console.log(\r\n          `%c *${opts.method.toUpperCase()} ${opts.url}* 请求失败, 响应如下:`,\r\n          \"background: #222; color: #bada55; font-weight: bold;\"\r\n        );\r\n        console.log(res);\r\n        throw new CustomError(message, opts.url, opts.method, opts.status);\r\n      }\r\n    });\r\n}\r\n\r\nclass Axios {\r\n  static get(url: string, queries?: object, _options?: object) {\r\n    return request({\r\n      method: \"get\",\r\n      url,\r\n      params: queries,\r\n      ..._options\r\n    });\r\n  }\r\n\r\n  static post(url: string, data: object, _options?: object) {\r\n    return request({\r\n      method: \"post\",\r\n      url,\r\n      data,\r\n      ..._options\r\n    });\r\n  }\r\n\r\n  static put(url: string, data: object, _options?: object) {\r\n    return request({\r\n      method: \"put\",\r\n      url,\r\n      data,\r\n      ..._options\r\n    });\r\n  }\r\n\r\n  static delete(url: string, _options?: object) {\r\n    return request({\r\n      method: \"delete\",\r\n      url,\r\n      ..._options\r\n    });\r\n  }\r\n}\r\n\r\nexport { Axios };\r\n","// Thingswise Analytic Platform\r\n// Copyright (C) 2015-2018  Thingswise, LLC\r\n// Last edited by Liang(Jeff) Liu - 1904219831@qq.com\r\nimport { Axios } from './request'\r\n\r\nexport interface MetricQuery {\r\n  metricType: string\r\n  name: string\r\n  geo: string\r\n  from?: number\r\n  to?: number\r\n  time?: number\r\n  period: string\r\n  value?: string\r\n  id?: string\r\n}\r\n\r\nexport interface BatchTimeseriesQuery {\r\n  names: {\r\n    [mid: string]: string\r\n  }\r\n  geo: string\r\n  from: number\r\n  to: number\r\n  period: string\r\n}\r\n\r\nexport interface DataPoint {\r\n  name: string\r\n  value: {\r\n    sum: number\r\n    cnt: number\r\n    min: number\r\n    max: number\r\n    stddev: number\r\n  }\r\n}\r\n\r\nexport class WebAPIClient {\r\n\r\n  baseURL: string\r\n\r\n  constructor(baseURL: string) {\r\n    this.baseURL = baseURL || '../'\r\n  }\r\n\r\n\r\n  /**\r\n   * Query parameters:\r\n   *\r\n   * metricType -- (required) one of timeseries, snapshot\r\n   * name -- (required) metric name\r\n   * geo -- (required) encoded geo filter (e.g. China|Beijing|...)\r\n   * from -- for timeseries: timestamp to start with (in milliseconds)\r\n   * to -- for timeseries: timestamp to end with (in milliseconds)\r\n   * time -- for snapshots: timestamp to query (in milliseconds); time will be moved to the boundary of the aggregation period\r\n   * period -- (required) aggregation period (1s, 15s, 1min, 5min, 1h, 1d, 1w)\r\n   * value -- the distribution parameter for snapshot queries (e.g. in vkey:metric for skey by period value is vkey)\r\n   * id -- used to correlate the requests with the chart plots\r\n   * ref -- request sequence number\r\n   * periodicity -- ???\r\n   * periodicSeq -- ???\r\n   *\r\n   * @param queries metric queries\r\n   *\r\n   * @return promise which result is array of metrics data\r\n   */\r\n  getData(queries: MetricQuery[], _options?: object): Promise<any[]> {\r\n    const getDataURI = 'api/view/metric/'\r\n    // return Promise.all(queries.map((q) => {\r\n    //     return Axios.get(getDataURI, {\r\n    //       ...q\r\n    //     }, {\r\n    //       baseURL: this.baseURL,\r\n    //       ..._options\r\n    //     })\r\n    // }))\r\n    return queries.reduce((prev: Promise<any[]>, q) => {\r\n      return prev.then((p: any[]) => {\r\n        return Axios.get(getDataURI, {\r\n          ...q\r\n        }, {\r\n          baseURL: this.baseURL,\r\n          ..._options\r\n        }).then((r: any) => {\r\n          p.push(r)\r\n          return p\r\n        })\r\n      })\r\n    }, Promise.resolve([] as any[]))\r\n  }\r\n\r\n  _constructBatchFuture(multimetricURI: string, queryParams: any, _options: object): Promise<{\r\n    [name: string]: DataPoint[]\r\n  }> {\r\n    return Axios.post(multimetricURI, {\r\n      ...queryParams,\r\n    }, {\r\n      baseURL: this.baseURL,\r\n      ..._options\r\n    }).then(response => {\r\n      const { data } = response.data as {\r\n        data: {\r\n          [mid: string]: {\r\n            name: string,\r\n            data: DataPoint[]\r\n          }\r\n        }\r\n      }\r\n      const result: {\r\n        [name: string]: DataPoint[]\r\n      } = {}\r\n      for (const mid in data) {\r\n        result[data[mid].name] = data[mid].data\r\n      }\r\n      return result\r\n    })\r\n  }\r\n\r\n  getTimeseriesBatch(queries: BatchTimeseriesQuery[], _options?: object): Promise<{\r\n    [name: string]: DataPoint[]\r\n  }[]> {\r\n    const multimetricURI = 'api/view/multimetric/'\r\n\r\n    const futures: Promise<{\r\n      [name: string]: DataPoint[]\r\n    }>[] = []\r\n\r\n    for (const query of queries) {\r\n      const queryParams = {\r\n        metricType: 'timeseries',\r\n        geo: query.geo,\r\n        from: query.from,\r\n        to: query.to,\r\n        period: query.period,\r\n        names: query.names,\r\n      }\r\n      if (Object.keys(queryParams.names).length == 0) {\r\n        futures.push(Promise.resolve({}))\r\n      } else {\r\n        futures.push(this._constructBatchFuture(multimetricURI, queryParams, _options))\r\n      }\r\n    }\r\n\r\n    return Promise.all(futures)\r\n  }\r\n\r\n  /**\r\n   * Query historic data for multiple geos, intervals and periods\r\n   * in a single request using the multimetric `.batches` extension.\r\n   *\r\n   * @param queries the array of query requests. Each request contains\r\n   *   a mapping of metric ID to a metric name to query for the given combination\r\n   *   of geo and interval\r\n   * @returns the promise of the dict which contains combined mapping\r\n   *   of metric IDs to the data point arrays. When input batch requests\r\n   *   contain the same metric ID, the behavior is undetermined\r\n   */\r\n  getTimeseriesMultiBatch(queries: BatchTimeseriesQuery[], noPrune:boolean = false, _options?: object): Promise<{\r\n    [name: string]: DataPoint[]\r\n  }> {\r\n    const multimetricURI = 'api/view/multimetric/'\r\n    return Axios.post(multimetricURI, {\r\n      metricType: 'timeseries',\r\n      batches: queries,\r\n      noPrune\r\n    }, {\r\n      baseURL: this.baseURL,\r\n      ..._options\r\n    }).then(response => {\r\n      const { data } = response.data as {\r\n        data: {\r\n          [mid: string]: {\r\n            name: string,\r\n            data: DataPoint[]\r\n          }\r\n        }\r\n      }\r\n      const result: {\r\n        [name: string]: DataPoint[]\r\n      } = {}\r\n      for (const mid in data) {\r\n        result[mid] = data[mid].data\r\n      }\r\n      return result\r\n    })\r\n  }\r\n\r\n  getConfig = function(this:WebAPIClient,_options?: object) {\r\n    const getConfigURI = 'api/config'\r\n    return Axios.get(getConfigURI, null, {\r\n      baseURL: this.baseURL,\r\n      ..._options\r\n    })\r\n  }\r\n\r\n  getGeoStruct(_options?: object) {\r\n    const getConfigURI = 'api/geo/struct'\r\n    return Axios.get(getConfigURI, null, {\r\n      baseURL: this.baseURL,\r\n      ..._options\r\n    })\r\n  }\r\n\r\n  getDevicesByGeo(geoSpec: any, _options?: object) {\r\n    const getDevicesByGeoURI = 'api/geo/device'\r\n    return Axios.get(getDevicesByGeoURI, geoSpec, {\r\n      baseURL: this.baseURL,\r\n      ..._options\r\n    })\r\n  }\r\n\r\n  getDeviceMetadata(deviceId: string, _options?: object) {\r\n    const getDeviceMetadataURI = 'api/device'\r\n    return Axios.get(getDeviceMetadataURI, { deviceId }, {\r\n      baseURL: this.baseURL,\r\n      ..._options\r\n    })\r\n  }\r\n\r\n  getBinaryObjectURL(collection: string, key: string) {\r\n    return Promise.resolve(this.baseURL + 'api/store/' + collection + '/' + key)\r\n  }\r\n\r\n  /**\r\n   * filter -- a string or an array of strings (for multiple disjuncts)\r\n   * id -- an array of strings\r\n   *\r\n   * Returns a promise of:\r\n   *\r\n   * [\r\n   *   {\r\n   *      \"id\": ...,\r\n   *      \"<domain>\": {\r\n   *          ...\r\n   *      }\r\n   *   }\r\n   * ]\r\n   */\r\n  search(domain: string, filter: string[], id: string[], _options?: object): Promise<{\r\n    id: string,\r\n    [domain: string]: any\r\n  }[]> {\r\n    const searchURI = 'api/search/' + domain\r\n    return Axios.get(searchURI, {\r\n        filter, // TODO ensure that the array of values gets converted into successive query ops\r\n        id: id ? id.join(',') : null,\r\n      }, {\r\n        baseURL: this.baseURL,\r\n        ..._options\r\n      }).then((d) => d.data)\r\n  }\r\n\r\n  createOrUpdateEntity(objId: string, scope: string, domain: string, data: object, _options?: object) {\r\n    const createObjectWithMixinURI = 'api/entity/' + objId\r\n    return Axios.post(createObjectWithMixinURI, { mixinType: domain, mixin: data, scope: scope }, {\r\n      baseURL: this.baseURL,\r\n      ..._options\r\n    })\r\n  }\r\n\r\n  getObjectDomain(objId: string, domain: string, _options?: object) {\r\n    const getObjectMixinURI = 'api/entity/' + objId + '/' + domain\r\n    return Axios.get(getObjectMixinURI, null, {\r\n      baseURL: this.baseURL,\r\n      ..._options\r\n    }).then((d) => d.data)\r\n  }\r\n\r\n  getMapValues(id: string, domain: string, name: string, from: string, to: string, _options?: object) {\r\n    const url = 'api/entity/' + id + '/' + domain + '/map/' + name\r\n    return Axios.get(url, { from, to }, {\r\n      baseURL: this.baseURL,\r\n      ..._options\r\n    })\r\n  }\r\n\r\n  getMapValue(id: string, domain: string, name: string, key: string, _options?: object) {\r\n    const url = 'api/entity/' + id + '/' + domain + '/map/' + name + '/' + key\r\n    return Axios.get(url, null, {\r\n      baseURL: this.baseURL,\r\n      ..._options\r\n    })\r\n  }\r\n\r\n  addValueToMap(id: string, domain: string, name: string, key: string, value: any, _options?: object) {\r\n    const url = 'api/entity/' + id + '/' + domain + '/map/' + name + '/' + key\r\n    return Axios.post(url, { value }, {\r\n      baseURL: this.baseURL,\r\n      ..._options\r\n    })\r\n  }\r\n\r\n  editMapValue(id: string, domain: string, name: string, key: string, value: any, _options?: object) {\r\n    const url = 'api/entity/' + id + '/' + domain + '/map/' + name + '/' + key\r\n    return Axios.put(url, { value }, {\r\n      baseURL: this.baseURL,\r\n      ..._options\r\n    })\r\n  }\r\n\r\n  deleteMapValue(id: string, domain: string, name: string, key: string, _options?: object) {\r\n    const url = 'api/entity/' + id + '/' + domain + '/map/' + name + '/' + key\r\n    return Axios.delete(url, {\r\n      baseURL: this.baseURL,\r\n      ..._options\r\n    })\r\n  }\r\n\r\n}","import * as _ from \"lodash\"\r\nimport { MetricQuery, WebAPIClient } from \"./WebAPIClient\"\r\n\r\n\r\nfunction getLabel(label: string | { i18n: { [locale: string]: string } }, locale: string = \"en-US\"): string {\r\n    if (!label) {\r\n        return \"\";\r\n    }\r\n    if (typeof label === \"string\") {\r\n        return label\r\n    }\r\n    if (label[\"i18n\"]) {\r\n        if (label[\"i18n\"][locale]) {\r\n            return label[\"i18n\"][locale];\r\n        }\r\n        if (label[\"i18n\"][\"en-US\"]) {\r\n            return label[\"i18n\"][\"en-US\"];\r\n        }\r\n        // try to find first non-empty value\r\n        const mbLabel = Object.keys(label[\"i18n\"]).find((e) => { return Boolean(label[\"i18n\"][e]) })\r\n        return mbLabel ? mbLabel : \"\";\r\n    }\r\n    return \"\" + label;\r\n}\r\n\r\nexport function webConfig(webApiURL: string = \"\", config: any = null, mapStruct: any = null, webApiClient: any = null): Promise<WebConfig> {\r\n    if (config != null || mapStruct != null) {\r\n        console.log({ webApiURL, config, mapStruct, webApiClient })\r\n        return Promise.resolve(new WebConfig(config, mapStruct, webApiClient))\r\n    }\r\n    if (webApiClient == null) {\r\n        webApiClient = new WebAPIClient(webApiURL)\r\n    }\r\n    return Promise.all([\r\n        webApiClient.getConfig(),\r\n        webApiClient.getGeoStruct()\r\n    ]).then(([config, mapStruct]) => new WebConfig(config, mapStruct, webApiClient))\r\n}\r\n\r\ninterface Viewport {\r\n    plotType: string\r\n    options: any\r\n    metrics: any[]\r\n    categories: {\r\n        name: string\r\n    }\r\n    periods: string[]\r\n    geoSpecs: string[]\r\n}\r\n\r\ninterface Metric {\r\n    name: string\r\n}\r\n\r\nexport interface GeoSpec {\r\n    [name: string]: string\r\n}\r\n\r\nexport class WebConfig {\r\n\r\n    private config: any\r\n    protected mapStruct: any\r\n    private webApiClient: WebAPIClient\r\n\r\n    constructor(config: any, mapStruct: any, webApiClient: WebAPIClient) {\r\n        this.config = config\r\n        this.mapStruct = mapStruct\r\n        this.webApiClient = webApiClient\r\n    }\r\n\r\n    timeseries(plots: {plotName: string, metricName: string, type?: string }[], locale: string = \"en-US\"): PlotSet {\r\n        const metricSpecs = this.config.metricSpecs || {};\r\n        const plotConfig: any = {}\r\n        const viewport: Viewport = {\r\n            \"plotType\": \"timeseries\",\r\n            \"options\": {\r\n                \"timeseries\":\r\n                    (this.config.defaultPlotOptions !== undefined ?\r\n                        _.cloneDeep(this.config.defaultPlotOptions[\"timeseries\"] || {}) : {})\r\n            },\r\n            \"metrics\": [] as any[],\r\n            \"categories\": {\r\n                \"name\": \"geo\" // or \"metric\" ???\r\n            },\r\n            \"periods\": [\r\n                \"1s\"\r\n            ],\r\n            \"geoSpecs\": null\r\n        }\r\n        let index = 0\r\n        plots.forEach(({plotName, metricName, type = \"y-axis values\"}) => {\r\n            const metricSpec = metricSpecs[metricName];\r\n            if (metricSpec) {\r\n                if (plotConfig[\"yLabel\"] === undefined) {\r\n                    plotConfig[\"yLabel\"] = getLabel(metricSpec[\"unit\"], locale)\r\n                }\r\n                if (plotConfig[\"timezone\"] === undefined) {\r\n                    plotConfig[\"timezone\"] = metricSpec[\"timezone\"]\r\n                }\r\n                plotConfig[type] = plotConfig[type] || {}\r\n                plotConfig[type][plotName] = {\r\n                    \"usedAs\": type,\r\n                    \"decimal\": metricSpec[\"decimal\"] || 0,\r\n                    \"unit\": getLabel(metricSpec[\"unit\"], locale),\r\n                    \"name\": getLabel(metricSpec[\"name\"], locale),\r\n                    \"index\": index++,\r\n                    \"__stats\": metricSpec[\"default-stats\"]\r\n                }\r\n                viewport[\"metrics\"].push({\r\n                    \"id\": plotName,\r\n                    \"periods\": [],\r\n                    \"geoSpecs\": [\"\"],\r\n                    \"name\": metricName,\r\n                    \"metricType\": \"timeseries\"\r\n                })\r\n            } else {\r\n                throw new Error(`Unknown metric ${metricName}`)\r\n            }\r\n        })\r\n\r\n        return new PlotSet(this, plotConfig, viewport, locale)\r\n    }\r\n\r\n    getData(queries: MetricQuery[], _options?: object) {\r\n        return this.webApiClient.getData(queries, _options)\r\n    }\r\n\r\n    search(domain: string, filter: string[], id: string[], _options?: object) {\r\n        return this.webApiClient.search(domain, filter, id, _options)\r\n    }\r\n\r\n    forPlotType(viewport: Viewport, plotTypes: string[]) {        \r\n        for (let i = 0; i < plotTypes.length; i++) {\r\n            if (viewport && viewport.plotType === plotTypes[i]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getMetricUsage_(viewport: Viewport) {\r\n        if (this.forPlotType(viewport, ['barchart', 'hbarchart', 'piechart']) && \r\n            viewport.categories != null && viewport.categories.name === 'metric') {\r\n            return 'asCategory';\r\n        } else {\r\n            return 'normal';\r\n        }\r\n    }\r\n\r\n    getValidMetricTypes_(viewport: Viewport, metric: Metric) {\r\n        const metricName = (metric) ? metric.name : (viewport.metrics[0] ? viewport.metrics[0].name : null)\r\n        if (metricName == null) {\r\n            console.error(\"null metric name\")\r\n            return []\r\n        }\r\n        const metricSpec = this.config.metricSpecs[metricName]\r\n\r\n        // new\r\n        if (_.isEmpty(this.config.plotTypes[viewport.plotType]) || \r\n            _.isEmpty(this.config.plotTypes[viewport.plotType].metricUsage)) {\r\n            console.error(\"invalid plotType: \" + viewport.plotType)\r\n            return []\r\n        }\r\n\r\n        const metricUsage = this.getMetricUsage_(viewport);\r\n        const valueTypes = this.config.plotTypes[viewport.plotType].metricUsage[metricUsage]\r\n        if (_.isEmpty(valueTypes)) {\r\n            console.log('empty value types for: ' + viewport.plotType + '.' + metricUsage)\r\n            return []\r\n        }\r\n\r\n        const metricTypes = this.config.plotTypes[viewport.plotType].metricUsage[metricUsage][metricSpec.valueType]\r\n        if (_.isEmpty(metricTypes)) {\r\n            console.log('empty valueType spec for: ' + viewport.plotType + '.' + metricUsage + '.' + metricSpec.valueType)\r\n            return []\r\n        }\r\n\r\n        const metricTypeArr: string[] = []\r\n        metricTypes.forEach(function (mt: string) {\r\n            if (!_.isEmpty(metricSpec.querySpecs[mt])) {\r\n                metricTypeArr.push(mt)\r\n            }\r\n        });\r\n        if (_.isEmpty(metricTypeArr)) { // shouldn't happen\r\n            console.log('metric ' + metricName + ' has no matching metric type ' + metricTypes[0])\r\n        }\r\n        return metricTypeArr\r\n    }\r\n\r\n    getGeoSpecFromGeoNotation(notation: string): GeoSpec {\r\n        if (_.isEmpty(notation)) {\r\n            throw new Error('unexpected empty geo notation')\r\n        }\r\n        const geoFields = notation.split(this.config.geoDelimiter)\r\n        const fieldLen = geoFields.length\r\n        const struct: GeoSpec = {}\r\n        const that = this\r\n        this.config.geoLevels.forEach(function (level: string, index: number) {\r\n            if (fieldLen > index && !that.isGeoFieldEmpty(geoFields[index])) {\r\n                struct[level] = geoFields[index]\r\n            } else {\r\n                struct[level] = ''\r\n            }\r\n        })\r\n        return struct\r\n    }\r\n\r\n    isGeoFieldEmpty(field: string): boolean {\r\n        return _.isEmpty(field) || field === 'none'\r\n    }\r\n\r\n    getGeoNotationFromGeoSpec(geoSpec: GeoSpec): string {\r\n        if (_.isEmpty(geoSpec)) {\r\n            console.warn('unexpected empty geo spec');\r\n            return \"\"\r\n        }\r\n        const geoArr: string[] = [];\r\n        let that = this;\r\n        this.config.geoLevels.some(function (level: string) {\r\n            if (!that.isGeoFieldEmpty(geoSpec[level])) {\r\n                geoArr.push(geoSpec[level]);\r\n                return false\r\n            } else {\r\n                return true;\r\n            }\r\n        })\r\n        return geoArr.join(this.config.geoDelimiter)\r\n    }\r\n\r\n    createOrUpdateEntity(objId: string, scope: string, domain: string, data: object, _options?: object) {\r\n        return this.webApiClient.createOrUpdateEntity(objId, scope, domain, data, _options)\r\n    }\r\n\r\n    getObjectDomain(objId: string, domain: string, _options?: object) {\r\n        return this.webApiClient.getObjectDomain(objId, domain, _options)\r\n    }\r\n\r\n    getMapValues(id: string, domain: string, name: string, from: string, to: string, _options?: object) {\r\n        return this.webApiClient.getMapValues(id, domain, name, from, to, _options)\r\n    }\r\n\r\n    getMapValue(id: string, domain: string, name: string, key: string, _options?: object) {\r\n        return this.webApiClient.getMapValue(id, domain, name, key, _options)\r\n    }\r\n\r\n    addValueToMap(id: string, domain: string, name: string, key: string, value: any, _options?: object) {\r\n        return this.webApiClient.addValueToMap(id, domain, name, key, value, _options)\r\n    }\r\n\r\n    editMapValue(id: string, domain: string, name: string, key: string, value: any, _options?: object) {\r\n        return this.webApiClient.editMapValue(id, domain, name, key, value, _options)\r\n    }\r\n\r\n    deleteMapValue(id: string, domain: string, name: string, key: string, _options?: object) {\r\n        return this.webApiClient.deleteMapValue(id, domain, name, key, _options)\r\n    }\r\n\r\n}\r\n\r\nexport interface Value {\r\n    cnt: number,\r\n    sum: number,\r\n    stddev: number,\r\n    min: number,\r\n    max: number\r\n}\r\n\r\nexport interface DataPoint {\r\n    name: string\r\n    value: Value\r\n}\r\n\r\nexport class PlotSet {\r\n\r\n    private webConfig: WebConfig\r\n    private plotConfig: any\r\n    private viewport: Viewport\r\n    protected locale: string\r\n    protected lastQuery: any\r\n\r\n    constructor(webConfig: WebConfig, plotConfig: any, viewport: Viewport, locale: string = \"en-US\") {\r\n        this.webConfig = webConfig\r\n        this.plotConfig = plotConfig\r\n        this.viewport = viewport\r\n        this.locale = locale\r\n        this.lastQuery = null\r\n    }\r\n\r\n    select(plotName: string | string[], geoSpec: string, period: string) {\r\n        if (_.isArray(plotName)) {\r\n            const that = this;\r\n            plotName.forEach((name) => {\r\n                that.select(name, geoSpec, period)\r\n            })\r\n            return that\r\n        }\r\n        if (!this.viewport[\"metrics\"].some((metric) => {\r\n                if (metric[\"id\"] === plotName) {\r\n                    metric[\"periods\"] = [period]\r\n                    metric[\"geoSpecs\"] = [geoSpec]\r\n                    this.viewport[\"geoSpecs\"] = [geoSpec]\r\n                    return true\r\n                }\r\n                return false\r\n            })) {\r\n            throw new Error(`Unknown plot ${plotName}`)\r\n        }\r\n        return this\r\n    }\r\n\r\n    aggregate(plotName: string, aggType: string) {\r\n        if (this.viewport.plotType === \"timeseries\") {\r\n            for (var type in this.plotConfig) {\r\n                var plot = this.plotConfig[type][plotName];\r\n                if (plot) {\r\n                    plot[\"__stats\"] = aggType\r\n                    return this\r\n                }\r\n            }\r\n            throw new Error(`Unknown plot ${plotName}`)\r\n        } else if (this.viewport.plotType === \"geomap\") {\r\n            if ([\"color\", \"area\"].some((type) => {\r\n                    if (this.plotConfig[type][\"__plot_name\"] === plotName) {\r\n                        this.plotConfig[type][\"__stats\"] = aggType\r\n                        return true\r\n                    }\r\n                    return false\r\n                })) {\r\n                return this\r\n            }\r\n            throw new Error(`Unknown plot ${plotName}`)\r\n        } else {\r\n            throw new Error(`Unsupported plot type ${this.viewport.plotType}`)\r\n        }\r\n    }\r\n\r\n    _get_aggFunction(aggType: string): ((entry: DataPoint) => number) {\r\n        let aggFunction;\r\n        if (aggType === \"avg\" || aggType === \"val\") {\r\n            aggFunction = (entry: DataPoint) => {\r\n                if (entry.value.cnt === 0) {\r\n                    return 0\r\n                } else {\r\n                    return entry.value.sum / entry.value.cnt\r\n                }\r\n            }\r\n        } else if (aggType === \"sum\") {\r\n            aggFunction = (entry: { value: { sum: number }}) => {\r\n                return entry.value.sum\r\n            }\r\n        } else if (aggType === \"cnt\") {\r\n            aggFunction = (entry: { value: { cnt: number }}) => {\r\n                return entry.value.cnt\r\n            }\r\n        } else if (aggType === \"stddev\") {\r\n            aggFunction = (entry: { value: { stddev: number }}) => {\r\n                return entry.value.stddev\r\n            }\r\n        } else {\r\n            console.warn(`Unknown aggregation type ${aggType}`)\r\n            aggFunction = null\r\n        }\r\n        return aggFunction\r\n    }\r\n\r\n    getValueKey(geoNotation: string):Error| string{\r\n        if (this.viewport.plotType === \"geomap\") {\r\n            // TODO\r\n            throw Error(\"Not supported\"+geoNotation)\r\n        }\r\n        return \"\"\r\n    }\r\n\r\n    query({from = 0, to = 0, time = 0, area = null as any}) {\r\n        try {\r\n            const queries = this.viewport[\"metrics\"].map((m) => {\r\n                if (m.geoSpecs.length <= 0) {\r\n                    throw new Error(`geo not set for ${m.name}`)\r\n                }\r\n                if (m.periods.length <= 0) {\r\n                    throw new Error(`period not set for ${m.name}`)\r\n                }\r\n                return {\r\n                    from: from,\r\n                    to: to,\r\n                    time: time,\r\n                    value: area ? this.getValueKey(area) : this.getValueKey(m.geoSpecs[0]),\r\n                    geo: area || m.geoSpecs[0],\r\n                    id: m.id,\r\n                    metricType: m.metricType,\r\n                    name: m.name,\r\n                    period: m.periods[0],\r\n                    ref: m.ref\r\n                }\r\n            }) as MetricQuery[]\r\n            const that = this;\r\n            return this.webConfig.getData(queries ).then((dataBundles) => {\r\n                    this.lastQuery = {from, to, time, area};\r\n                    return new QueryResult(\r\n                        that,\r\n                        {from, to, time, area},\r\n                        dataBundles.map((data: { \r\n                            metricType: string, \r\n                            id: string,\r\n                            data: DataPoint[] \r\n                        }) => {\r\n                            if (data.metricType === \"timeseries\") {\r\n                                console.log(data)\r\n                                console.log(that.plotConfig)\r\n                                if (that.viewport.plotType === \"timeseries\") {\r\n                                    for (var type in that.plotConfig) {\r\n                                        if (!that.plotConfig[type] || !that.plotConfig[type][data.id]) {\r\n                                            continue\r\n                                        }\r\n                                        const aggType = that.plotConfig[type][data.id][\"__stats\"]\r\n                                        var aggFunction = this._get_aggFunction(aggType)\r\n                                        if (aggFunction == null) {\r\n                                            throw new Error(`Unknown aggregation type for plot ${data.id}`)\r\n                                        }\r\n                                        return new Timeseries(data.data.map((entry: DataPoint) => {\r\n                                            return {\r\n                                                date: Number(entry.name) * 1000.,\r\n                                                value: aggFunction(entry)\r\n                                            }\r\n                                        }))                                            \r\n                                    }\r\n                                    throw new Error(`Unknown plot id ${data.id}`)\r\n                                }\r\n                                throw new Error(`Unsupported viewport type ${that.viewport.plotType} for metric ${data.metricType}`)\r\n                            } else if (data.metricType === \"snapshot\") {\r\n                                if (that.viewport.plotType === \"geomap\") {\r\n                                    const type = [\"area\", \"color\"].find((type) => {\r\n                                        return data.id in that.plotConfig[type];\r\n                                    });\r\n                                    if (type) {\r\n                                        const aggType = that.plotConfig[type][data.id][\"__stats\"]\r\n                                        var aggFunction = this._get_aggFunction(aggType)\r\n                                        if (aggFunction == null) {\r\n                                            throw new Error(`Unknown aggregation type for plot ${data.id}`)\r\n                                        }\r\n                                        return new Snapshot(data.data.map((entry: DataPoint) => {\r\n                                            return {\r\n                                                name: entry.name, // TODO ?????\r\n                                                value: aggFunction(entry)\r\n                                            }\r\n                                        }))\r\n                                    }\r\n                                    throw new Error(`Unknown plot id ${data.id}`)\r\n                                }\r\n                                throw new Error(`Unsupported viewport type ${that.viewport.plotType} for metric ${data.metricType}`)\r\n                            }\r\n                            throw new Error(`Metric type ${data.metricType} not supported`)\r\n                        }))\r\n                }\r\n            )\r\n        } catch (e) {\r\n            return Promise.reject(e)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport class QueryResult {\r\n\r\n    private plotSet: any\r\n    private from: number\r\n    private to: number\r\n    private time: number\r\n    private area: string\r\n    private data: (Timeseries | Snapshot)[]\r\n\r\n    constructor(plotSet: PlotSet, {from = 0, to = 0, time = 0, area = null as string}, data: (Timeseries | Snapshot)[]) {\r\n        this.plotSet = plotSet\r\n        this.from = from\r\n        this.to = to\r\n        this.time = time\r\n        this.area = area\r\n        this.data = data\r\n    }\r\n\r\n    timeseries(index: number): Timeseries {\r\n        if (this.data[index] instanceof Timeseries) {\r\n            return this.data[index] as Timeseries\r\n        }\r\n        throw new Error(\"Incompatible data bundle type\")\r\n    }\r\n\r\n    snapshot(index: number): Snapshot {\r\n        if (this.data[index] instanceof Snapshot) {\r\n            return this.data[index] as Snapshot\r\n        }\r\n        throw new Error(\"Incompatible data bundle type\")\r\n    }\r\n\r\n    repeat({from = -1, to = -1, time = -1, area = null as any}) {\r\n        return this.plotSet.query(\r\n            {\r\n                from: from >= 0 ? from : this.from,\r\n                to: to >= 0 ? to : this.to,\r\n                time: time >= 0 ? time : this.time,\r\n                area: area !== null ? area : this.area\r\n            })\r\n    }\r\n}\r\n\r\ninterface TimeseriesDataPoint {\r\n    date: number,\r\n    value: number\r\n}\r\n\r\nclass Timeseries {\r\n    \r\n    private data: TimeseriesDataPoint[]\r\n\r\n    constructor(data: TimeseriesDataPoint[]) {\r\n        this.data = data\r\n    }\r\n\r\n    getData(): TimeseriesDataPoint[] {\r\n        return this.data\r\n    }\r\n\r\n}\r\n\r\ninterface SnapshotDataPoint {\r\n    name: string,\r\n    value: number\r\n}\r\n\r\nclass Snapshot {\r\n\r\n    private data: SnapshotDataPoint[]\r\n\r\n    constructor(data: SnapshotDataPoint[]) {\r\n        this.data = data\r\n    }\r\n\r\n    getData(): SnapshotDataPoint[] {\r\n        return this.data\r\n    }\r\n}\r\n","import { cloneDeep } from 'lodash'\r\nimport { AnnotatedWebConfig } from '../queries'\r\n// 组织或设备名与geo信息对照表\r\n// 各应用根据组织或设备名获取指定的geo\r\nconst GeoStructObj: GeoStruct = {}\r\nconst property = '_config';\r\n\r\nconst env = global ? global : window\r\n\r\n/**\r\n * 组织或设备名与geo信息对照表数据接口\r\n *\r\n * @export\r\n * @interface GeoStruct\r\n */\r\nexport interface GeoStruct {\r\n    [name: string]: {\r\n        class: string[]\r\n        geo: string\r\n        level: string\r\n        name: {\r\n            cn: string\r\n            en: string\r\n        }\r\n    }\r\n}\r\n\r\ndeclare global {\r\n    interface Window {\r\n        //@ts-ignore\r\n        _config: AnnotatedWebConfig\r\n    }\r\n}\r\n//@ts-ignore\r\ndeclare module NodeJS {\r\n    interface Global {\r\n        //@ts-ignore\r\n        _config: AnnotatedWebConfig\r\n    }\r\n}\r\n\r\n/**\r\n * 初始化GeoStructObj\r\n *\r\n * @export\r\n * @param {*} struct\r\n * @param {string[]} levels\r\n * @returns {GeoStruct}\r\n */\r\nexport function setGeoStruct(struct: any, levels: string[]) {\r\n    let geoLevels = levels.slice()\r\n    // 全局geo信息未初始化，且存在指定层级，且存在对应层级信息\r\n    if (geoLevels && Array.isArray(geoLevels) && geoLevels.length > 0) {\r\n        const level = geoLevels.shift()\r\n        if (Object.prototype.hasOwnProperty.call(struct, level)) {\r\n            const obj = struct[level]\r\n            if (obj) {\r\n                // 循环当前层级的每项组织或设备\r\n                Object.keys(obj).forEach(key => {\r\n                    const tmp = obj[key]\r\n                    const className = tmp.class[0].fqn\r\n\r\n                    GeoStructObj[tmp.name] = {\r\n                        geo: _getGeoByClass(className, tmp.name),\r\n                        class: tmp.class.map(item => item.fqn),\r\n                        level,\r\n                        name: { en: tmp.name, cn: tmp.i18n['zh-CN'] },\r\n                    }\r\n\r\n                    // 存在下级则递归\r\n                    setGeoStruct(tmp, geoLevels.slice())\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n*根据指定组织结构层级和类型（组织或设备）拼接geo\r\n*\r\n* @private\r\n* @param {string} className 类名\r\n* @param {string} name 设备名\r\n* @returns\r\n*/\r\nfunction _getGeoByClass(className: string, name: string): string {\r\n    if (className && className.length > 0) {\r\n        const arr = env[property].findObjects({ classes: [className] })\r\n        // 查找指定设备\r\n        const geoObj = arr.find(item => item.spec.name === name)\r\n        // 存在设备\r\n        if (geoObj) {\r\n            // 获取完整geo组织层级\r\n            const geoLevels = env[property].getGeoRootLevels()\r\n            // 按照指定组织层级拼接geo\r\n            return geoLevels\r\n                .reduce((geo, level) => {\r\n                    if (geoObj.key[level]) {\r\n                        geo.push(geoObj.key[level])\r\n                    }\r\n                    return geo\r\n                }, new Array<string>())\r\n                .join('|')\r\n        }\r\n    }\r\n    return ''\r\n}\r\n\r\n/**\r\n * 获取全局组织或设备名与geo信息对照表\r\n *\r\n * @export\r\n * @returns {GeoStruct}\r\n */\r\nexport default function getorSetGeoStruct(): GeoStruct {\r\n    if (Object.keys(GeoStructObj).length === 0) {\r\n        setGeoStruct(env[property].getMapStruct(), env[property].getGeoSubLevels())\r\n    }\r\n    return cloneDeep(GeoStructObj)\r\n}\r\n\r\n/**\r\n * 根据指定的组织或设备的类，获取同类下所有的geo\r\n *\r\n * @param {string} className 设备或组织所属的类\r\n * @returns {string[]} geo数组\r\n */\r\nexport function getGeoByClassName(className: string): string[] {\r\n    if (className && className.length > 0) {\r\n        const arr = env[property].findObjects({ classes: [className] })\r\n        // 存在同类组织或设备信息\r\n        if (arr.length > 0) {\r\n            // 获取完整geo组织层级\r\n            const geoLevels = env[property].getGeoRootLevels()\r\n            return arr.map(item => {\r\n                // 按照指定组织层级拼接geo\r\n                return geoLevels\r\n                    .reduce((geo, level) => {\r\n                        if (item.key[level]) {\r\n                            geo.push(item.key[level])\r\n                        }\r\n                        return geo\r\n                    }, new Array<string>())\r\n                    .join('|')\r\n            })\r\n        }\r\n    }\r\n    return new Array<string>()\r\n}","import { BatchTimeseriesQuery, MetricQuery, WebAPIClient } from './WebAPIClient'\r\nimport { DataPoint, GeoSpec, Value, WebConfig } from './WebConfig'\r\nimport { cloneDeep } from 'lodash'\r\nimport { setGeoStruct } from './GlobalGeoConfig/GlobalGeoConfig'\r\n\r\ninterface I18n {\r\n\t[lang: string]: string\r\n}\r\n\r\ninterface InternationalizedLabel {\r\n\ti18n: I18n\r\n}\r\n\r\n\r\n\r\ntype ALabel = string | InternationalizedLabel\r\n\r\nexport function getLabel(label: ALabel, locale: string): string {\r\n\tif ((label as InternationalizedLabel).i18n) {\r\n\t\tconst i18n = (label as InternationalizedLabel).i18n\r\n\t\tif (i18n[locale]) {\r\n\t\t\treturn i18n[locale]\r\n\t\t} else {\r\n\t\t\tfor (const key of Object.keys(i18n)) {\r\n\t\t\t\treturn i18n[key]\r\n\t\t\t}\r\n\t\t\treturn ''\r\n\t\t}\r\n\t} else {\r\n\t\treturn label as string\r\n\t}\r\n}\r\n\r\nexport interface AnnotatedMetricSpec {\r\n\tname: ALabel\r\n\tvalueType: string\r\n\t['default-stats']: string\r\n\tquerySpecs: {\r\n\t\ttimeseries: {\r\n\t\t\t[scope: string]: any\r\n\t\t}\r\n\t}\r\n\tnote: ALabel\r\n\ttimezone: string\r\n\tdecimal: number\r\n\tunit: ALabel\r\n\tcategory: string | string[]\r\n\t// annotations\r\n\taxis?: string | undefined | null\r\n\taxisValue?: string | undefined | null\r\n\tdomain?: string | undefined | null\r\n\tmetric?: string | undefined | null\r\n\tcategoryList?: string[]\r\n}\r\n\r\nexport interface FieldSpec {\r\n\tname: ALabel\r\n\tnote: ALabel\r\n\tdecimal: number\r\n\tunit: ALabel\r\n}\r\n\r\nexport interface ObjectSpec {\r\n\taxis?: {\r\n\t\t[axisName: string]: string[]\r\n\t}\r\n\tclass?: Array<{\r\n\t\ti18n?: I18n\r\n\t\tfqn: string\r\n\t}>\r\n\tname: string\r\n}\r\n\r\n// to see $project/data/metric-specs.json\r\ninterface AnnotatedWebAPIConfig {\r\n\tgeoSubLevels: string[]\r\n\tmetricSpecs: {\r\n\t\t[metricName: string]: AnnotatedMetricSpec\r\n\t}\r\n\tgeoLevels: string[]\r\n\r\n\t// an index into the metric specs:\r\n\t// - the top level is the list of Domains (Consumption, Generation, PurchasePrice, ...)\r\n\t// - the second level is the metric category (Water, ...)\r\n\t// - the third level is the metric spec itself (oxygen, ...)\r\n\tfieldSpecs: {\r\n\t\t[domain: string]: {\r\n\t\t\t[category: string]: {\r\n\t\t\t\t[metric: string]: FieldSpec\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction annotateWebConfig(config: AnnotatedWebAPIConfig) {\r\n\t// The compile method is deprecated\r\n\t// const r = new RegExp(/^(((([a-zA-Z0-9_]+)\\$([a-zA-Z0-9_]+))\\.)?([a-zA-Z0-9_]+)\\.)?([a-zA-Z0-9_]+)$/, 'g')\r\n\t// for browser ie11\r\n\tconst r = /^(((([a-zA-Z0-9_]+)\\$([a-zA-Z0-9_]+))\\.)?([a-zA-Z0-9_]+)\\.)?([a-zA-Z0-9_]+)$/g\r\n\tconfig.fieldSpecs = {}\r\n\t// [\"process$boiler.Consumption.purchased_electricity\", \"process$boiler.Consumption.\", \"process$boiler.\", \"process$boiler\", \"process\", \"boiler\", \"Consumption\", \"purchased_electricity\", index: 0, input: \"process$boiler.Consumption.purchased_electricity\", groups: undefined]\r\n\tfor (const metricName of Object.keys(config.metricSpecs)) {\r\n\t\tr.lastIndex = 0\r\n\t\tconst components = r.exec(metricName)\r\n\t\tif (components !== null) {\r\n\t\t\tconfig.metricSpecs[metricName].axis = components[4] !== '' ? components[4] : null\r\n\t\t\tconfig.metricSpecs[metricName].axisValue = components[5] !== '' ? components[5] : null\r\n\t\t\tconfig.metricSpecs[metricName].domain = components[6] !== '' ? components[6] : null\r\n\t\t\tconfig.metricSpecs[metricName].metric = components[7] !== '' ? components[7] : null\r\n\r\n\t\t\tconst category = config.metricSpecs[metricName].category\r\n\t\t\tlet categoryString: string | null\r\n\t\t\tlet categoryList: string[]\r\n\t\t\tif (category !== null && typeof category === 'string') {\r\n\t\t\t\tcategoryString = category as string\r\n\t\t\t\tcategoryList = [categoryString]\r\n\t\t\t} else if (category !== null && Array.isArray(category)) {\r\n\t\t\t\tcategoryList = category as string[]\r\n\t\t\t\tcategoryString = categoryList.length > 0 ? categoryList[0] : null\r\n\t\t\t} else {\r\n\t\t\t\tcategoryString = null\r\n\t\t\t\tcategoryList = []\r\n\t\t\t}\r\n\t\t\tconfig.metricSpecs[metricName].categoryList = categoryList\r\n\r\n\t\t\tif (\r\n\t\t\t\tconfig.metricSpecs[metricName].domain !== null &&\r\n\t\t\t\tconfig.metricSpecs[metricName].metric !== null &&\r\n\t\t\t\tcategoryString !== null\r\n\t\t\t) {\r\n\t\t\t\tconst domain = config.metricSpecs[metricName].domain as string\r\n\t\t\t\tconst metric = config.metricSpecs[metricName].metric as string\r\n\r\n\t\t\t\tconst domainObj = (config.fieldSpecs[domain] = config.fieldSpecs[domain] || {})\r\n\t\t\t\tconst categoryObj = categoryString\r\n\t\t\t\t\t? (domainObj[categoryString] = domainObj[categoryString] || {})\r\n\t\t\t\t\t: null\r\n\r\n\t\t\t\tif (categoryObj && !(metric in categoryObj)) {\r\n\t\t\t\t\tcategoryObj[metric] = {\r\n\t\t\t\t\t\tname: config.metricSpecs[metricName].name,\r\n\t\t\t\t\t\tnote: config.metricSpecs[metricName].note,\r\n\t\t\t\t\t\tdecimal: config.metricSpecs[metricName].decimal,\r\n\t\t\t\t\t\tunit: config.metricSpecs[metricName].unit,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function annotatedWebConfig(\r\n\twebApiURL: string = '',\r\n\tconfig: AnnotatedWebAPIConfig | null,\r\n\tmapStruct: any,\r\n\twebApiClient: WebAPIClient,\r\n): Promise<AnnotatedWebConfig> {\r\n\tif (config != null || mapStruct != null) {\r\n\t\treturn Promise.resolve(new AnnotatedWebConfig(config as AnnotatedWebAPIConfig, mapStruct, webApiClient))\r\n\t}\r\n\tif (webApiClient == null) {\r\n\t\twebApiClient = new WebAPIClient(webApiURL)\r\n\t}\r\n\treturn Promise.all([webApiClient.getConfig(), webApiClient.getGeoStruct()]).then(\r\n\t\tdata => {\r\n\t\t\tconst { data: cfg } = data[0]\r\n\t\t\tconst { data: Map } = data[1]\r\n\t\t\tconst webApiConfig = (cfg as unknown) as AnnotatedWebAPIConfig\r\n\t\t\tannotateWebConfig(webApiConfig) // add axis,axisValue,domain,metric fields\r\n\r\n\t\t\treturn new AnnotatedWebConfig(webApiConfig, Map, webApiClient)\r\n\t\t},\r\n\t)\r\n}\r\n\r\n// share webConfig in the whole application\r\nlet installed: Promise<AnnotatedWebConfig>\r\n\r\n\r\nexport function globalConfig(\r\n\twebApiURL: string = '',\r\n\tconfig: AnnotatedWebAPIConfig | null = null,\r\n\tmapStruct: any = null,\r\n\twebApiClient: WebAPIClient = null,\r\n): Promise<AnnotatedWebConfig> {\r\n\tif (installed) {\r\n\t\treturn installed\r\n\t}\r\n\tinstalled = annotatedWebConfig(webApiURL, config, mapStruct, webApiClient)\r\n\treturn installed\r\n}\r\n\r\nexport interface TimeseriesDataPoint {\r\n\ttimestamp: number\r\n\tvalue: Value\r\n\tsum?: number\r\n}\r\n\r\n/**\r\n * Check if any of the elements in elementCategories belongs to\r\n * categories\r\n * @param elementCategories\r\n * @param categories\r\n */\r\nfunction categoryMatch(elementCategories: string[], categories: string[]): boolean {\r\n\treturn elementCategories.some(elementCategory => categories.indexOf(elementCategory) !== -1)\r\n}\r\n\r\nexport class AnnotatedWebConfig {\r\n\tprivate config: AnnotatedWebAPIConfig\r\n\tprivate readonly mapStruct: any\r\n\tprivate client: WebAPIClient\r\n\tprivate webConfig: WebConfig\r\n\r\n\tconstructor(config: AnnotatedWebAPIConfig, mapStruct: any, client: WebAPIClient) {\r\n\t\tthis.config = config\r\n\t\tthis.mapStruct = mapStruct\r\n\t\tthis.client = client\r\n\t\tthis.webConfig = new WebConfig(config, mapStruct, client)\r\n\t\t// @ts-ignore\r\n\t\tif (global) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tglobal._config = this\r\n\t\t} else {\r\n\t\t\t// @ts-ignore\r\n\t\t\twindow._config = this\r\n\t\t}\r\n\t\tsetGeoStruct(mapStruct, this.getGeoSubLevels())\r\n\t}\r\n\r\n\tpublic filterMetrics(\r\n\t\tmetricType: string,\r\n\t\tgeoLevels: string[],\r\n\t\taxis: string,\r\n\t\taxisValues: string[],\r\n\t\tdomain: string,\r\n\t\tcategories: string[],\r\n\t\tmetrics: string[],\r\n\t\tresolution: string,\r\n\t): {\r\n\t\t[metricName: string]: AnnotatedMetricSpec\r\n\t} {\r\n\t\tconst result = {}\r\n\t\tif (geoLevels.length === 0) {\r\n\t\t\treturn result\r\n\t\t}\r\n\t\t// metricName: 'axis$axisValue.domain.metric' ; metric example at the bottom\r\n\t\tfor (const metricName of Object.keys(this.config.metricSpecs)) {\r\n\t\t\tconst metric = this.config.metricSpecs[metricName]\r\n\t\t\tif (axis !== null && metric.axis !== axis) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (axisValues !== null && axisValues.indexOf(metric.axisValue as string) === -1) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (domain !== null && metric.domain !== domain) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (categories !== null && !categoryMatch(metric.categoryList as string[], categories)) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (metrics !== null && metrics.indexOf(metric.metric as string) === -1) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (metricType === 'timeseries') {\r\n\t\t\t\tif (metric.querySpecs && metric.querySpecs.timeseries) {\r\n\t\t\t\t\tlet current = metric.querySpecs.timeseries\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tgeoLevels.some(level => {\r\n\t\t\t\t\t\t\tif (current[level]) {\r\n\t\t\t\t\t\t\t\tcurrent = current[level]\r\n\t\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (current.periods) {\r\n\t\t\t\t\t\t\tif (resolution !== null && current.periods.indexOf(resolution) === -1) {\r\n\t\t\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresult[metricName] = metric\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\tpublic getGeoSpecFromGeoNotation(notation: string): GeoSpec {\r\n\t\treturn this.webConfig.getGeoSpecFromGeoNotation(notation)\r\n\t}\r\n\r\n\tpublic getGeoNotationFromGeoSpec(geoSpec: GeoSpec): string {\r\n\t\treturn this.webConfig.getGeoNotationFromGeoSpec(geoSpec)\r\n\t}\r\n\r\n\tpublic getGeoLevels(geoSpec: GeoSpec): string[] {\r\n\t\tconst result: string[] = []\r\n\t\tthis.config.geoLevels.some(level => {\r\n\t\t\tif (!this.webConfig.isGeoFieldEmpty(geoSpec[level])) {\r\n\t\t\t\tresult.push(level)\r\n\t\t\t\treturn false\r\n\t\t\t} else {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * 获取完整的geo层级\r\n\t *\r\n\t * @returns {string[]}\r\n\t * @memberof AnnotatedWebConfig\r\n\t */\r\n\tpublic getGeoRootLevels(): string[] {\r\n\t\treturn this.config.geoLevels.slice()\r\n\t}\r\n\r\n\t/**\r\n\t * 获取顶级组织下的子geo层级，即不包含enterprise\r\n\t *\r\n\t * @returns {string[]}\r\n\t * @memberof AnnotatedWebConfig\r\n\t */\r\n\tpublic getGeoSubLevels(): string[] {\r\n\t\treturn this.config.geoSubLevels.slice()\r\n\t}\r\n\r\n\t// public getAdmGeoList(geoSpec: GeoSpec, level: number): object {\r\n\t// \treturn this.webConfig.getAdmGeoList(geoSpec, level)\r\n\t// }\r\n\r\n\tpublic getMapStruct() {\r\n\t\treturn cloneDeep(this.mapStruct)\r\n\t}\r\n\r\n\tpublic json2array() {\r\n\t\tconst mapStruct = this.mapStruct\r\n\t\tconst levels = this.config.geoSubLevels\r\n\r\n\t\t// geoSubLevels: [\"factory\", \"workshop\", \"line\", \"equipment_product_shift\"]\r\n\r\n\t\t// 仪表采集，氧气管网，供电公司，供水公司等不在top menu中显示\r\n\t\tconst excludeFactory = ['MeterBus', 'MeterCollection', 'OxygenPipeline', 'GasFactory', 'ElectricityProvider', 'WaterProvider']\r\n\r\n\t\tfunction _json2array(json, level, name) {\r\n\t\t\tif (level > levels.length) {\r\n\t\t\t\treturn []\r\n\t\t\t}\r\n\t\t\tlet arr = []\r\n\t\t\tconst currObj = json[levels[level]]\r\n\t\t\t// remove line level from organization\r\n\t\t\tif (level === 2) {\r\n\t\t\t\tfor (const item in currObj) {\r\n\t\t\t\t\tif (currObj.hasOwnProperty(item)) {\r\n\t\t\t\t\t\tconst tmpSub = _json2array(currObj[item], level + 1, name + '|' + currObj[item].name)\r\n\t\t\t\t\t\tarr = [...arr, ...tmpSub]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn arr\r\n\t\t\t}\r\n\r\n\t\t\tfor (const item in currObj) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tcurrObj.hasOwnProperty(item) &&\r\n\t\t\t\t\t!excludeFactory.find(e => currObj[item].class[0].fqn.split('}')[1] === e)\r\n\t\t\t\t\t// !excludeFactory.find(e => currObj[item].class[0].fqn.match(/(?<=\\})\\w+/g)[0] === e)\r\n\t\t\t\t) {\r\n\t\t\t\t\tconst tmpSub = _json2array(currObj[item], level + 1, name + '|' + currObj[item].name)\r\n\t\t\t\t\t// remove equipment type at equipment_product_shift level\r\n\t\t\t\t\tif (level === 3 && currObj[item].class[0].fqn.indexOf('Machine') !== -1) {\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t\tarr.push({\r\n\t\t\t\t\t\tlevel: levels[level],\r\n\t\t\t\t\t\tgeo: name + '|' + currObj[item].name,\r\n\t\t\t\t\t\tprocess: currObj[item].axis ? currObj[item].axis.process : [],\r\n\t\t\t\t\t\tclass: currObj[item].class,\r\n\t\t\t\t\t\ti18n: currObj[item].i18n,\r\n\t\t\t\t\t\tsub: tmpSub,\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arr\r\n\t\t}\r\n\r\n\t\tconst sub = _json2array(mapStruct, 0, mapStruct.name)\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tlevel: this.config.geoLevels[0],\r\n\t\t\t\tgeo: mapStruct.name,\r\n\t\t\t\tclass: mapStruct.class,\r\n\t\t\t\ti18n: mapStruct.i18n,\r\n\t\t\t\tsub,\r\n\t\t\t\tprocess: mapStruct.axis.process,\r\n\t\t\t},\r\n\t\t]\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param queries\r\n\t * [{from: 1539129600000\r\n\t *  geo: \"zb_e\"\r\n\t *  id: \"process$blast_furnance.Consumption.oxygen\"\r\n\t *  metricType: \"timeseries\"\r\n\t *  name: \"process$blast_furnance.Consumption.oxygen\"\r\n\t *  period: \"1h\"\r\n\t *  to: 1547388445646}]\r\n\t *\r\n\t *  @return\r\n\t */\r\n\tpublic timeseries(\r\n\t\tqueries: MetricQuery[],\r\n\t): Promise<Array<{\r\n\t\tid: string\r\n\t\tdata: TimeseriesDataPoint[]\r\n\t}>> {\r\n\t\treturn this.client\r\n\t\t\t.getData(queries)\r\n\t\t\t.then((queryResult: Array<{ metricType: string; id: string; data: DataPoint[] }>) => {\r\n\t\t\t\tconst result: Array<{\r\n\t\t\t\t\tid: string\r\n\t\t\t\t\tdata: TimeseriesDataPoint[]\r\n\t\t\t\t}> = []\r\n\t\t\t\tfor (const item of queryResult) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tconst { metricType, id, data } = item.data\r\n\t\t\t\t\tif (metricType === 'timeseries') {\r\n\t\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\t\tid,\r\n\t\t\t\t\t\t\tdata: data.map(({ name, value }) => ({\r\n\t\t\t\t\t\t\t\ttimestamp: parseFloat(name),\r\n\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t})),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn result\r\n\t\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @param domain\r\n\t * @param filter -- a string or an array of strings (for multiple disjuncts)\r\n\t * @param id -- an array of strings\r\n\t *\r\n\t */\r\n\tpublic search(domain: string, filter: string[], id: string[], _options?: object) {\r\n\t\treturn this.webConfig.search(domain, filter, id, _options)\r\n\t}\r\n\r\n\t/**\r\n\t * 修改整个模型对象或新建模型对象\r\n\t * 注意会整体覆盖，所以需要将原有属性保留 { ...originalValue,newValue }\r\n\t * Creates or updates object with specified domain data.\r\n\t * @param objectId object id\r\n\t * @param scope equipment object id, ie \"zb_e|rolling_f1|bar_w1|bar_l1\" . instruction has no scope,so should be set null\r\n\t * @param domain domain, mixin type, ie \"Target\",\"steel___OxygenPipelineInstruction\"\r\n\t * @param data data, mixin value,ie {state:'accepted'}\r\n\t * @result\r\n\t *\r\n\t */\r\n\tpublic createOrUpdateEntity(objectId: string, scope: string, domain: string, data: object, _options?: object) {\r\n\t\treturn this.webConfig.createOrUpdateEntity(objectId, scope, domain, data, _options)\r\n\t}\r\n\r\n\t/**\r\n\t * Return the array of tuples (key, value) where X <= key < Y\r\n\t * @param id object id\r\n\t * @param domain domain, mixin type, ie \"Target\"\r\n\t * @param name map name\r\n\t * @param from lower bound of the key 值必须可以计算\r\n\t * @param to upper bound of the key\r\n\t */\r\n\tpublic getMapValues(id: string, domain: string, name: string, from: string, to: string, _options?: object) {\r\n\t\treturn this.webConfig.getMapValues(id, domain, name, from, to, _options)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns key value\r\n\t * @param id object id\r\n\t * @param domain domain, mixin type, ie \"Target\"\r\n\t * @param name map name\r\n\t * @param key\r\n\t */\r\n\tpublic getMapValue(id: string, domain: string, name: string, key: string, _options?: object) {\r\n\t\treturn this.webConfig.getMapValue(id, domain, name, key, _options)\r\n\t}\r\n\r\n\t/**\r\n\t * 模型对象必须存在，否则先用createOrUpdateEntity()创建\r\n\t * 给模型对象添加一个自定义的属性（若无）${name},值为[ ...  {  key:${key}, value:${value} } ... ],value可以为任意类型。key推荐为连续的值，如时间戳，方便查询。\r\n\t * 如果指定的属性存在，则数组新增一个value对象。key的值必须不同，否则会返回500错误。\r\n\t * 如果需要修改指定key对应的value，使用 editMapValue api。\r\n\t * Add the value to the customized or specified field of map\r\n\t * @param id : object id  ie  instruction ID:  \"zb_e|oxygen_p1|oxygen_p1_1552357589\",\r\n\t * @param domain : domain, mixin type,    ie \"Target\" , \"steel___OxygenPipelineInstruction\"\r\n\t * @param name : name of filed gonna to add/modify     ie: actions\r\n\t * @param key : key to new data\r\n\t * @param value : value is either a primitive type or a object\r\n\t * @example\r\n\t window._config.addValueToMap(\r\n\t \"zb_e|oxygen_p1|oxygen_p1_1552444028\",      // instruction ID\r\n\t \"steel___OxygenPipelineInstruction\",        // domain\r\n\t \"actions\",                                  // customized field name\r\n\t `${new Date().getTime()}`,      // used as new entry ID; recommend to use timestamp for uniqueness and ordering.\r\n\t { user:\"iron_f1\",log: \"changed state from new to accepted\" }\r\n\t )\r\n\t result:{\r\n            id: \"zb_e|oxygen_p1|oxygen_p1_1552444028\"\r\n            steel___OxygenPipelineInstruction:{\r\n                actions:[{\r\n                    key: \"1552444095543\"\r\n                    value: {user: \"iron_f1\",log: \"changed state from new to accepted\" }\r\n                }]\r\n            }\r\n        }\r\n\t */\r\n\tpublic addValueToMap(id: string, domain: string, name: string, key: string, value: any, _options?: object) {\r\n\t\treturn this.webConfig.addValueToMap(id, domain, name, key, value, _options)\r\n\t}\r\n\r\n\t/**\r\n\t * Edit the value in the map\r\n\t * @param id object id\r\n\t * @param domain domain, mixin type, ie \"Target\"\r\n\t * @param name map name\r\n\t * @param key\r\n\t * @param value the value is either a primitive type or a document\r\n\t */\r\n\tpublic editMapValue(id: string, domain: string, name: string, key: string, value: any, _options?: object) {\r\n\t\treturn this.webConfig.editMapValue(id, domain, name, key, value, _options)\r\n\t}\r\n\r\n\t/**\r\n\t * Delete the map value\r\n\t * @param id object id\r\n\t * @param domain domain, mixin type, ie \"Target\"\r\n\t * @param name map name\r\n\t * @param key\r\n\t */\r\n\tpublic deleteMapValue(id: string, domain: string, name: string, key: string, _options?: object) {\r\n\t\treturn this.webConfig.deleteMapValue(id, domain, name, key, _options)\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves domain data from object.\r\n\t * @param objectId object id，ie:'zb_e|oxygen_p1|oxygen_p1_1552357589'\r\n\t * @param domain domain/mixin type, ie:\"steel___OxygenPipelineInstruction\"\r\n\t */\r\n\tpublic getObjectDomain(objectId: string, domain: string, _options?: object) {\r\n\t\treturn this.webConfig.getObjectDomain(objectId, domain, _options)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t *  @return\r\n\t */\r\n\tpublic timeseriesBatch(\r\n\t\tqueries: BatchTimeseriesQuery[],\r\n\t\t_options?: object\r\n\t): Promise<Array<{\r\n\t\t[name: string]: TimeseriesDataPoint[]\r\n\t}>> {\r\n\t\treturn this.client.getTimeseriesBatch(queries, _options).then(results => {\r\n\t\t\tconst result: Array<{\r\n\t\t\t\t[name: string]: TimeseriesDataPoint[]\r\n\t\t\t}> = []\r\n\t\t\tfor (const data of results) {\r\n\t\t\t\tconst item: {\r\n\t\t\t\t\t[name: string]: TimeseriesDataPoint[]\r\n\t\t\t\t} = {}\r\n\t\t\t\tfor (const metric of Object.keys(data)) {\r\n\t\t\t\t\titem[metric] = data[metric].map(({ name, value }) => ({\r\n\t\t\t\t\t\ttimestamp: parseFloat(name),\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t}))\r\n\t\t\t\t}\r\n\t\t\t\tresult.push(item)\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t *  @return\r\n\t */\r\n\tpublic timeseriesMultiBatch(\r\n\t\tqueries: BatchTimeseriesQuery[],\r\n\t\tnoPrune: boolean = false,\r\n\t\t_options?: object\r\n\t): Promise<{\r\n\t\t[name: string]: TimeseriesDataPoint[]\r\n\t}> {\r\n\t\treturn this.client.getTimeseriesMultiBatch(queries, noPrune, _options).then(data => {\r\n\t\t\tconst result: {\r\n\t\t\t\t[name: string]: TimeseriesDataPoint[]\r\n\t\t\t} = {}\r\n\t\t\tfor (const metric of Object.keys(data)) {\r\n\t\t\t\tresult[metric] = data[metric].map(({ name, value }) => ({\r\n\t\t\t\t\ttimestamp: parseFloat(name),\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Find objects specified by the filter. If filter element is null, skip this element\r\n\t *\r\n\t */\r\n\tpublic findObjects({\r\n\t\tclasses = null,\r\n\t}: {\r\n\t\tclasses?: string[]\r\n\t}): Array<{\r\n\t\t// object geo spec\r\n\t\tkey: GeoSpec\r\n\t\t// object spec\r\n\t\tspec: ObjectSpec\r\n\t}> {\r\n\t\tconst result: {\r\n\t\t\t[geo: string]: {\r\n\t\t\t\tkey: GeoSpec\r\n\t\t\t\tspec: ObjectSpec\r\n\t\t\t}\r\n\t\t} = {}\r\n\t\tthis._findObjects(\r\n\t\t\tthis.mapStruct,\r\n\t\t\tthis.mapStruct.name,\r\n\t\t\t{\r\n\t\t\t\t[this.config.geoLevels[0]]: this.mapStruct.name,\r\n\t\t\t},\r\n\t\t\tthis.config.geoLevels.slice(1),\r\n\t\t\t{\r\n\t\t\t\tclasses,\r\n\t\t\t},\r\n\t\t\tresult,\r\n\t\t)\r\n\t\tconst resultList: Array<{\r\n\t\t\tkey: GeoSpec\r\n\t\t\tspec: ObjectSpec\r\n\t\t}> = []\r\n\t\tfor (const geo of Object.keys(result)) {\r\n\t\t\tresultList.push(result[geo])\r\n\t\t}\r\n\t\treturn resultList\r\n\t}\r\n\r\n\tpublic isInstance(obj: GeoSpec, cls: string): boolean {\r\n\t\tconst inputObj = this._findObjectByGeoSpec(obj)\r\n\t\tconst classes = inputObj.spec.class\r\n\t\tfor (const c of classes) {\r\n\t\t\tif (cls === c.fqn) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\tpublic getSources(\r\n\t\tobj: GeoSpec,\r\n\t\trelationType: string,\r\n\t): Array<{\r\n\t\t// object geo spec\r\n\t\tkey: GeoSpec\r\n\t\t// object spec\r\n\t\tspec: ObjectSpec\r\n\t}> {\r\n\t\tconst result: {\r\n\t\t\t[geo: string]: {\r\n\t\t\t\tkey: GeoSpec\r\n\t\t\t\tspec: ObjectSpec\r\n\t\t\t}\r\n\t\t} = {}\r\n\t\tconst geoNotation = this.getGeoNotationFromGeoSpec(obj)\r\n\t\tthis._findObjectsByRelation(\r\n\t\t\tthis.mapStruct,\r\n\t\t\tthis.mapStruct.name,\r\n\t\t\t{\r\n\t\t\t\t[this.config.geoLevels[0]]: this.mapStruct.name,\r\n\t\t\t},\r\n\t\t\tthis.config.geoLevels.slice(1),\r\n\t\t\t{\r\n\t\t\t\trelations: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: relationType,\r\n\t\t\t\t\t\tdestination: geoNotation,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tresult,\r\n\t\t)\r\n\t\tconst resultList: Array<{\r\n\t\t\tkey: GeoSpec\r\n\t\t\tspec: ObjectSpec\r\n\t\t}> = []\r\n\t\tfor (const geo of Object.keys(result)) {\r\n\t\t\tresultList.push(result[geo])\r\n\t\t}\r\n\t\treturn resultList\r\n\t}\r\n\r\n\tpublic getDestinations(\r\n\t\tobj: GeoSpec,\r\n\t\trelationType: string,\r\n\t): Array<{\r\n\t\t// object geo spec\r\n\t\tkey: GeoSpec\r\n\t\t// object spec\r\n\t\tspec: ObjectSpec\r\n\t}> {\r\n\t\tconst inputObj = this._findObjectByGeoSpec(obj)\r\n\t\tconst resultList: Array<{\r\n\t\t\tkey: GeoSpec\r\n\t\t\tspec: ObjectSpec\r\n\t\t}> = []\r\n\t\tconst relations = (inputObj.spec as any).related as [{ destination: string; type: string }]\r\n\t\tif (relations) {\r\n\t\t\tfor (const relation of relations) {\r\n\t\t\t\tif (relation.type === relationType) {\r\n\t\t\t\t\tconst geoNotation = relation.destination\r\n\t\t\t\t\tconst resultObj = this._findObjectByGeoNotation(geoNotation)\r\n\t\t\t\t\tif (resultObj) {\r\n\t\t\t\t\t\tresultList.push(resultObj)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn resultList\r\n\t}\r\n\r\n\tprivate _findObjects(\r\n\t\t// subtree root spec\r\n\t\troot: ObjectSpec,\r\n\t\t// subtree root GeoNotation (a|b|c...)\r\n\t\tgeo: string,\r\n\t\t// subtree root GeoSpec\r\n\t\t// { leve0: a, level1: b, ... }\r\n\t\tgeoSpec: GeoSpec,\r\n\t\t// list of geo levels [level+1, level+2, ...]\r\n\t\tsubLevels: string[],\r\n\t\t// object filter\r\n\t\tfilter: {\r\n\t\t\t// currently only support class filter\r\n\t\t\tclasses: string[]\r\n\t\t},\r\n\t\t// result map\r\n\t\tresult: {\r\n\t\t\t[geo: string]: {\r\n\t\t\t\tkey: GeoSpec\r\n\t\t\t\tspec: ObjectSpec\r\n\t\t\t}\r\n\t\t},\r\n\t) {\r\n\t\t// match root\r\n\t\tlet match = true\r\n\t\tif (filter.classes !== null) {\r\n\t\t\tlet notFound = true\r\n\t\t\tfor (const aClass of filter.classes) {\r\n\t\t\t\tif (root.class !== null && root.class.some(({ fqn }) => fqn === aClass)) {\r\n\t\t\t\t\tnotFound = false\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (notFound) {\r\n\t\t\t\tmatch = false\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (match) {\r\n\t\t\tresult[geo] = {\r\n\t\t\t\tkey: geoSpec,\r\n\t\t\t\tspec: root,\r\n\t\t\t}\r\n\t\t}\r\n\t\t// walk the subtree recursively\r\n\t\tif (subLevels.length > 0) {\r\n\t\t\tconst children = (root as any)[subLevels[0]] as {\r\n\t\t\t\t[id: string]: ObjectSpec\r\n\t\t\t}\r\n\t\t\tif (!!children) {\r\n\t\t\t\tfor (const id of Object.keys(children)) {\r\n\t\t\t\t\tthis._findObjects(\r\n\t\t\t\t\t\tchildren[id],\r\n\t\t\t\t\t\t`${geo}|${id}`,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t...geoSpec,\r\n\t\t\t\t\t\t\t[subLevels[0]]: id,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsubLevels.slice(1),\r\n\t\t\t\t\t\tfilter,\r\n\t\t\t\t\t\tresult,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _findObjectsByRelation(\r\n\t\t// todo: this method is copy from _findObjects and change `filter`. should it be merged into _findObjects\r\n\t\t// subtree root spec\r\n\t\troot: ObjectSpec,\r\n\t\t// subtree root GeoNotation (a|b|c...)\r\n\t\tgeo: string,\r\n\t\t// subtree root GeoSpec\r\n\t\t// { leve0: a, level1: b, ... }\r\n\t\tgeoSpec: GeoSpec,\r\n\t\t// list of geo levels [level+1, level+2, ...]\r\n\t\tsubLevels: string[],\r\n\t\t// object filter\r\n\t\tfilter: {\r\n\t\t\t// classes: string[]\r\n\t\t\trelations: Array<{ type: string; destination: string }>\r\n\t\t},\r\n\t\t// result map\r\n\t\tresult: {\r\n\t\t\t[geo: string]: {\r\n\t\t\t\tkey: GeoSpec\r\n\t\t\t\tspec: ObjectSpec\r\n\t\t\t}\r\n\t\t},\r\n\t) {\r\n\t\t// match root\r\n\t\t// let match = true\r\n\t\t// if (filter.classes !== null) {\r\n\t\t//     let notFound = true\r\n\t\t//     for (const aClass of filter.classes) {\r\n\t\t//         if (root.class !== null && root.class.some(({ fqn }) => fqn === aClass)) {\r\n\t\t//             notFound = false\r\n\t\t//             break\r\n\t\t//         }\r\n\t\t//         if (notFound) {\r\n\t\t//             match = match && false\r\n\t\t//         }\r\n\t\t//     }\r\n\t\t// }\r\n\r\n\t\t// match root\r\n\t\tlet match = true\r\n\t\tif (filter.relations !== null) {\r\n\t\t\tlet notFound = true\r\n\t\t\tfor (const aRelation of filter.relations) {\r\n\t\t\t\tif (\r\n\t\t\t\t\t(root as any).related !== undefined &&\r\n\t\t\t\t\t(root as any).related !== null &&\r\n\t\t\t\t\t(root as any).related.some(\r\n\t\t\t\t\t\t({ type, destination }) => type === aRelation.type && destination === aRelation.destination,\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tnotFound = false\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (notFound) {\r\n\t\t\t\tmatch = false\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (match) {\r\n\t\t\tresult[geo] = {\r\n\t\t\t\tkey: geoSpec,\r\n\t\t\t\tspec: root,\r\n\t\t\t}\r\n\t\t}\r\n\t\t// walk the subtree recursively\r\n\t\tif (subLevels.length > 0) {\r\n\t\t\tconst children = (root as any)[subLevels[0]] as {\r\n\t\t\t\t[id: string]: ObjectSpec\r\n\t\t\t}\r\n\t\t\tif (!!children) {\r\n\t\t\t\tfor (const id of Object.keys(children)) {\r\n\t\t\t\t\tthis._findObjectsByRelation(\r\n\t\t\t\t\t\tchildren[id],\r\n\t\t\t\t\t\t`${geo}|${id}`,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t...geoSpec,\r\n\t\t\t\t\t\t\t[subLevels[0]]: id,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsubLevels.slice(1),\r\n\t\t\t\t\t\tfilter,\r\n\t\t\t\t\t\tresult,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _findObjectByGeoNotation(\r\n\t\tgeoNotation: string,\r\n\t): {\r\n\t\t// object geo spec\r\n\t\tkey: GeoSpec\r\n\t\t// object spec\r\n\t\tspec: ObjectSpec\r\n\t} {\r\n\t\tlet geoDelimiter = (this.config as any).geoDelimiter\r\n\t\tif (!geoDelimiter) {\r\n\t\t\tgeoDelimiter = '|'\r\n\t\t}\r\n\t\tconst geoLevels = this.config.geoLevels\r\n\t\tconst targetGeoFields = geoNotation.split(geoDelimiter)\r\n\t\tconst resultKey = {}\r\n\t\tlet obj = this.mapStruct\r\n\t\tif (targetGeoFields.length <= geoLevels.length) {\r\n\t\t\tfor (let i = 0; i < targetGeoFields.length; i++) {\r\n\t\t\t\tconst level = geoLevels[i]\r\n\t\t\t\tconst field = targetGeoFields[i]\r\n\t\t\t\tresultKey[level] = field\r\n\t\t\t\tif (i === 0) {\r\n\t\t\t\t\tif (field !== obj.name) {\r\n\t\t\t\t\t\tthrow new Error(`unexpected geo field ${field} on geo level ${level}`)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tobj = obj[level][field]\r\n\t\t\t\t\tif (!obj) {\r\n\t\t\t\t\t\tthrow new Error(`unexpected geo field ${field} on geo level ${level}`)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tkey: resultKey,\r\n\t\t\tspec: obj,\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _findObjectByGeoSpec(\r\n\t\tgeoSpec: GeoSpec,\r\n\t): {\r\n\t\tkey: GeoSpec\r\n\t\tspec: ObjectSpec\r\n\t} {\r\n\t\tconst geoLevels = this.config.geoLevels\r\n\t\tlet obj = this.mapStruct\r\n\t\tconst geoSpecLength = Object.keys(geoSpec).length\r\n\t\tif (geoSpecLength <= geoLevels.length) {\r\n\t\t\tfor (let i = 0; i < geoSpecLength; i++) {\r\n\t\t\t\tconst level = geoLevels[i]\r\n\t\t\t\tconst field = geoSpec[level]\r\n\t\t\t\tif (i === 0) {\r\n\t\t\t\t\tif (field !== obj.name) {\r\n\t\t\t\t\t\tthrow new Error(`unexpected geo field ${field} on geo level ${level}`)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tobj = obj[level][field]\r\n\t\t\t\t\tif (!obj) {\r\n\t\t\t\t\t\tthrow new Error(`unexpected geo field ${field} on geo level ${level}`)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tkey: geoSpec,\r\n\t\t\tspec: obj,\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//\r\nexport function aggregateTimeseries(timeseries: TimeseriesDataPoint[][]): TimeseriesDataPoint[] {\r\n\tconst result: TimeseriesDataPoint[] = []\r\n\t//@ts-ignore\r\n\tconst indices: number[] = timeseries.map(data => -1)\r\n\r\n\twhile (true) {\r\n\t\tlet stop = true\r\n\t\tlet minIdx = -1\r\n\t\tfor (let i = 0; i < indices.length; i++) {\r\n\t\t\tif (indices[i] + 1 < timeseries[i].length) {\r\n\t\t\t\tif (minIdx === -1) {\r\n\t\t\t\t\tminIdx = i\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (timeseries[i][indices[i] + 1].timestamp < timeseries[minIdx][indices[minIdx] + 1].timestamp) {\r\n\t\t\t\t\t\tminIdx = i\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tstop = false\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (stop) {\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tconst timestamp = timeseries[minIdx][indices[minIdx] + 1].timestamp\r\n\t\tconst value: Value = {\r\n\t\t\tsum: 0,\r\n\t\t\tcnt: 0,\r\n\t\t\tmax: 0,\r\n\t\t\tmin: 0,\r\n\t\t\tstddev: 0,\r\n\t\t}\r\n\t\tfor (let i = 0; i < indices.length; i++) {\r\n\t\t\tif (indices[i] + 1 < timeseries[i].length) {\r\n\t\t\t\tif (timeseries[i][indices[i] + 1].timestamp === timestamp) {\r\n\t\t\t\t\tvalue.sum += timeseries[i][indices[i] + 1].value.sum\r\n\t\t\t\t\tvalue.cnt += timeseries[i][indices[i] + 1].value.cnt\r\n\t\t\t\t\tif (value.cnt > 0) {\r\n\t\t\t\t\t\tvalue.min = Math.min(value.min, timeseries[i][indices[i] + 1].value.min)\r\n\t\t\t\t\t\tvalue.max = Math.min(value.min, timeseries[i][indices[i] + 1].value.max)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tindices[i] += 1\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult.push({ timestamp, value })\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\n/**\r\n *  process$blast_furnance.Consumption.oxygen as follows:\r\n * {\r\n * \"category\":\"Gas\",\r\n * \"name\":{\"i18n\":{\"zh-CN\":\"氧气\",\"en-US\":\"Oxygen\"}},\r\n * \"valueType\":\"number:statistics\",\r\n * \"default-stats\":\"avg\",\r\n * \"querySpecs\":{\r\n *      \"timeseries\":{\r\n *          \"enterprise\":{\r\n *              \"periods\":[\"1h\"],\r\n *              \"factory\":{\r\n *                  \"workshop\":{\r\n *                      \"line_shift\":{\r\n *                          \"periods\":[\"1h\"],\r\n *                          \"equipment_product\":{\"periods\":[\"1h\"]}\r\n *                          },\r\n *                       \"periods\":[\"1h\"]\r\n *                   },\r\n *                   \"periods\":[\"1h\"]}\r\n *              }\r\n *        }\r\n *   },\r\n *  \"note\":{\"i18n\":{\"zh-CN\":\"氧气消耗量\",\"en-US\":\"Oxygen Consumption\"}},\r\n *  \"timezone\":\"UTC\",\r\n *  \"decimal\":3,\r\n *  \"unit\":\"m³\",\r\n *  \"axis\":\"process\",\r\n *  \"axisValue\":\"blast_furnance\",\r\n *  \"domain\":\"Consumption\",\r\n *  \"metric\":\"oxygen\"\r\n *  }\r\n */\r\n","import * as queries from './queries'\r\nimport * as config from './GlobalGeoConfig/GlobalGeoConfig'\r\n\r\nexport default {\r\n    queries,\r\n    config,\r\n}"],"names":["_.cloneDeep","_.isEmpty","_.isArray","cloneDeep","getLabel"],"mappings":"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"}